{"ast":null,"code":"const initialState = {\n  hours: \"\",\n  minutes: \"\",\n  seconds: \"\",\n  date: \"\"\n};\n\nconst GetInputReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"CALCULATE_DATE\") {\n    const today = new Date();\n    const hours = today.getUTCHours() + +action.payload;\n    const date = today.getUTCDate();\n    const month = today.getMonth();\n    const year = today.getFullYear();\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n    if (hours >= 24) {\n      state.date = String(date + 1) + \"th of \" + monthNames[month] + \", \" + String(year);\n      return {\n        hours: state.hours,\n        minutes: state.minutes,\n        seconds: state.seconds,\n        date: state.date\n      };\n    } else if (hours < 0) {\n      state.date = String(date - 1) + \"th of \" + monthNames[month] + \", \" + String(year);\n      return {\n        hours: state.hours,\n        minutes: state.minutes,\n        seconds: state.seconds,\n        date: state.date\n      };\n    } else {\n      state.date = String(date) + \"th of \" + monthNames[month] + \", \" + String(year);\n      return {\n        hours: state.hours,\n        minutes: state.minutes,\n        seconds: state.seconds,\n        date: state.date\n      };\n    }\n  }\n\n  if (action.type === \"CALCULATE_TIME\") {\n    const today = new Date();\n    const minutes = today.getUTCMinutes();\n    const seconds = today.getUTCSeconds();\n  }\n\n  return state;\n};\n\n_c = GetInputReducer;\nexport default GetInputReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetInputReducer\");","map":{"version":3,"sources":["C:/Users/akunjalw/Desktop/projects/akash/theworldclock/app/src/Store/GetInputReducer.js"],"names":["initialState","hours","minutes","seconds","date","GetInputReducer","state","action","type","today","Date","getUTCHours","payload","getUTCDate","month","getMonth","year","getFullYear","monthNames","String","getUTCMinutes","getUTCSeconds"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,OAAO,EAAE,EAFU;AAGnBC,EAAAA,OAAO,EAAE,EAHU;AAInBC,EAAAA,IAAI,EAAE;AAJa,CAArB;;AAOA,MAAMC,eAAe,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AACxD,MAAIA,MAAM,CAACC,IAAP,KAAgB,gBAApB,EAAsC;AACpC,UAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,UAAMT,KAAK,GAAGQ,KAAK,CAACE,WAAN,KAAsB,CAACJ,MAAM,CAACK,OAA5C;AACA,UAAMR,IAAI,GAAGK,KAAK,CAACI,UAAN,EAAb;AACA,UAAMC,KAAK,GAAGL,KAAK,CAACM,QAAN,EAAd;AACA,UAAMC,IAAI,GAAGP,KAAK,CAACQ,WAAN,EAAb;AACA,UAAMC,UAAU,GAAG,CACjB,SADiB,EAEjB,UAFiB,EAGjB,OAHiB,EAIjB,OAJiB,EAKjB,KALiB,EAMjB,MANiB,EAOjB,MAPiB,EAQjB,QARiB,EASjB,WATiB,EAUjB,SAViB,EAWjB,UAXiB,EAYjB,UAZiB,CAAnB;;AAcA,QAAIjB,KAAK,IAAI,EAAb,EAAiB;AACfK,MAAAA,KAAK,CAACF,IAAN,GACEe,MAAM,CAACf,IAAI,GAAG,CAAR,CAAN,GAAmB,QAAnB,GAA8Bc,UAAU,CAACJ,KAAD,CAAxC,GAAkD,IAAlD,GAAyDK,MAAM,CAACH,IAAD,CADjE;AAEA,aAAO;AACLf,QAAAA,KAAK,EAAEK,KAAK,CAACL,KADR;AAELC,QAAAA,OAAO,EAAEI,KAAK,CAACJ,OAFV;AAGLC,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAHV;AAILC,QAAAA,IAAI,EAAEE,KAAK,CAACF;AAJP,OAAP;AAMD,KATD,MASO,IAAIH,KAAK,GAAG,CAAZ,EAAe;AACpBK,MAAAA,KAAK,CAACF,IAAN,GACEe,MAAM,CAACf,IAAI,GAAG,CAAR,CAAN,GAAmB,QAAnB,GAA8Bc,UAAU,CAACJ,KAAD,CAAxC,GAAkD,IAAlD,GAAyDK,MAAM,CAACH,IAAD,CADjE;AAEA,aAAO;AACLf,QAAAA,KAAK,EAAEK,KAAK,CAACL,KADR;AAELC,QAAAA,OAAO,EAAEI,KAAK,CAACJ,OAFV;AAGLC,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAHV;AAILC,QAAAA,IAAI,EAAEE,KAAK,CAACF;AAJP,OAAP;AAMD,KATM,MASA;AACLE,MAAAA,KAAK,CAACF,IAAN,GACEe,MAAM,CAACf,IAAD,CAAN,GAAe,QAAf,GAA0Bc,UAAU,CAACJ,KAAD,CAApC,GAA8C,IAA9C,GAAqDK,MAAM,CAACH,IAAD,CAD7D;AAEA,aAAO;AACLf,QAAAA,KAAK,EAAEK,KAAK,CAACL,KADR;AAELC,QAAAA,OAAO,EAAEI,KAAK,CAACJ,OAFV;AAGLC,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAHV;AAILC,QAAAA,IAAI,EAAEE,KAAK,CAACF;AAJP,OAAP;AAMD;AACF;;AACD,MAAIG,MAAM,CAACC,IAAP,KAAgB,gBAApB,EAAsC;AACpC,UAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,UAAMR,OAAO,GAAGO,KAAK,CAACW,aAAN,EAAhB;AACA,UAAMjB,OAAO,GAAGM,KAAK,CAACY,aAAN,EAAhB;AACD;;AACD,SAAOf,KAAP;AACD,CAxDD;;KAAMD,e;AA0DN,eAAeA,eAAf","sourcesContent":["const initialState = {\r\n  hours: \"\",\r\n  minutes: \"\",\r\n  seconds: \"\",\r\n  date: \"\",\r\n};\r\n\r\nconst GetInputReducer = (state = initialState, action) => {\r\n  if (action.type === \"CALCULATE_DATE\") {\r\n    const today = new Date();\r\n    const hours = today.getUTCHours() + +action.payload;\r\n    const date = today.getUTCDate();\r\n    const month = today.getMonth();\r\n    const year = today.getFullYear();\r\n    const monthNames = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    if (hours >= 24) {\r\n      state.date =\r\n        String(date + 1) + \"th of \" + monthNames[month] + \", \" + String(year);\r\n      return {\r\n        hours: state.hours,\r\n        minutes: state.minutes,\r\n        seconds: state.seconds,\r\n        date: state.date,\r\n      };\r\n    } else if (hours < 0) {\r\n      state.date =\r\n        String(date - 1) + \"th of \" + monthNames[month] + \", \" + String(year);\r\n      return {\r\n        hours: state.hours,\r\n        minutes: state.minutes,\r\n        seconds: state.seconds,\r\n        date: state.date,\r\n      };\r\n    } else {\r\n      state.date =\r\n        String(date) + \"th of \" + monthNames[month] + \", \" + String(year);\r\n      return {\r\n        hours: state.hours,\r\n        minutes: state.minutes,\r\n        seconds: state.seconds,\r\n        date: state.date,\r\n      };\r\n    }\r\n  }\r\n  if (action.type === \"CALCULATE_TIME\") {\r\n    const today = new Date();\r\n    const minutes = today.getUTCMinutes();\r\n    const seconds = today.getUTCSeconds();\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default GetInputReducer;\r\n"]},"metadata":{},"sourceType":"module"}